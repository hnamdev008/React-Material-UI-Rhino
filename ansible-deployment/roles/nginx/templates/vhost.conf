upstream nodejs {
    server 127.0.0.1:{{ project.port }} max_fails=0;
    keepalive 512;
}

#CORS Config    
#This block is not in use, but may be something to consider down the road
map $http_origin $allow_origin {
  default "$http_origin";
   "~^https?://[^/]+\.rhino\.lan(:[0-9]+)?$" "$http_origin";
}

map $request_method $cors_method {
  default "allowed";
  "OPTIONS" "preflight";
}

map $cors_method $cors_max_age {
  default "";
  "preflight" 1728000;
}

map $cors_method $cors_allow_methods {
  default "";
  "preflight" "GET, POST, OPTIONS";
}

map $cors_method $cors_allow_headers {
  default "";
  "preflight" "Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since";
}

map $cors_method $cors_content_length {
  default $initial_content_length;
  "preflight" 0;
}

map $cors_method $cors_content_type {
  default $initial_content_type;
  "preflight" "text/plain charset=UTF-8";
}
#End of CORS config

server {
    listen 80;
    return 301 https://$host$request_uri;
    }
    
server {    
    listen 443 ssl;
    server_name {{ hostname }} {{ hostname }}.{{ domainname }} *.{{ hostname }}.{{ domainname }};
    charset utf-8;
    ssl_certificate /etc/nginx/ssl/{{ssl_certs_common_name}}/{{ssl_certs_common_name}}.pem;
    ssl_certificate_key /etc/nginx/ssl/{{ssl_certs_common_name}}/{{ssl_certs_common_name}}.key;
       
    location / {

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
      proxy_pass http://localhost:{{ project.port }}/;
      proxy_ssl_session_reuse off;
      proxy_set_header Host $http_host;
      proxy_cache_bypass $http_upgrade;
      proxy_redirect off;

      #The allow-origin permits anyone currently, see map $http_origin $allow_origin {
      add_header 'Access-Control-Allow-Origin' '*';
      #change "*" to enable whitelist "$http_origin"

      add_header Access-Control-Allow-Credentials 'true';
      add_header Access-Control-Max-Age $cors_max_age;
      add_header Access-Control-Allow-Methods $cors_allow_methods;
      add_header Access-Control-Allow-Headers $cors_allow_headers;

      set $initial_content_length $sent_http_content_length;
      add_header 'Content-Length' "";
      add_header 'Content-Length' $cors_content_length;

      set $initial_content_type $sent_http_content_type;
      add_header Content-Type "";
      add_header Content-Type $cors_content_type;

      if ($request_method = 'OPTIONS') {
      return 204;   }
    
    }
}
